name: Building library

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
      name: Build and test
      runs-on: ubuntu-latest

      steps:
        - name: Check-out code
          uses: actions/checkout@v3

        - name: Setup .NET Core SDK
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: 6.x

        - name: Build code
          run: dotnet build --configuration Release --no-restore

        - name: Testing code
          run: |
            echo "## ❔ Test results" >> $GITHUB_STEP_SUMMARY
            dotnet test --configuration Release -v minimal --no-build --logger GitHubActions '/p:CollectCoverage=true;CoverletOutputFormat="json,lcov,cobertura";MergeWith=${{github.workspace}}/coverage.json;CoverletOutput=${{github.workspace}}/coverage' tests/Sonos.Base.Tests -- RunConfiguration.CollectSourceInformation=true
            dotnet test --configuration Release -v minimal --no-build --logger GitHubActions '/p:CollectCoverage=true;CoverletOutputFormat="json,lcov,cobertura";MergeWith=${{github.workspace}}/coverage.json;CoverletOutput=${{github.workspace}}/coverage' tests/Sonos.Base.Events.Http.Tests -- RunConfiguration.CollectSourceInformation=true  

        - name: Code Coverage report
          run: |
            dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.23
            reportgenerator -reports:${{github.workspace}}/coverage.cobertura.xml -targetdir:${{github.workspace}}/report -reporttypes:MarkdownSummaryGithub "-filefilters:-*.g.cs" -verbosity:Warning
            sed -i 's/# Summary/## 📝 Code Coverage/g' ${{github.workspace}}/report/SummaryGithub.md
            sed -i 's/## Coverage/### Code Coverage details/g' ${{github.workspace}}/report/SummaryGithub.md
            cat ${{github.workspace}}/report/*.md >> $GITHUB_STEP_SUMMARY   
